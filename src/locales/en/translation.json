{
  "nav": {
    "home": "Home",
    "contact": "Contact",
    "technologies": "Technologies",
    "aiApproach": "AI Approach",
    "patents": "Patents",
    "promptGallery": "Prompt Gallery",
    "experience": "Experience",
    "logo": "Portfolio"
  },
  "home": {
    "name": "Hi, I'm Halil ƒ∞brahim Ko√ßak.",
    "intro": "To me, software development is more than just writing code ‚Äî it's about building systems, solving real problems, and shaping what's next.",
    "techApproach": "I combine modern technologies, original ideas, and user-centered design across every project I work on.",
    "aiApproach": "I don't just use AI tools ‚Äî I design structured, creative workflows around them to unlock real productivity.",
    "patents": "I hold several patents (and pending ones), because innovation means thinking beyond code.",
    "techStack": "As a full-stack developer, I build robust, scalable applications using TypeScript, React, Tailwind, and Spring Boot.",
    "hobbies": "In my free time, I enjoy building games with Unity, designing interactive experiences, and exploring narrative mechanics.",
    "philosophy": "Every line of code should serve a greater system.",
    "passion": "I love building those systems ‚Äî and making them meaningful."
  },
  "contact": {
    "title": "Contact Me",
    "subtitle": "Get in touch for collaborations and opportunities",
    "phone": "Phone",
    "call": "Call",
    "email": "Email",
    "availability": "Availability",
    "availabilityText": "I am currently available for freelance projects and full-time opportunities.",
    "form": {
      "name": "Name",
      "email": "Email",
      "subject": "Subject",
      "message": "Message",
      "mustBeFilled": "must be filled out.",
      "send": "Send Message",
      "sending": "Sending..."
    }
  },
  "technologies": {
    "title": "Technologies",
    "projects": "Projects"
  },
  "aiApproach": {
    "title": "My AI Approach",
    "methodology": "My Methodology",
    "methodologyText": "I leverage AI tools to enhance productivity and creativity while maintaining human oversight and critical thinking.",
    "tools": "AI Tools I Use",
    "usage": "Usage",
    "mainTitle": "My AI Approach",
    "mainTitleSubtitle": "My methodology for AI projects",
    "infoSectionTitle1": "How Do I Use AI and Prompts?",
    "infoSectionDesc1": [
      "I use artificial intelligence not just to generate outputs, but to systematically boost my productivity, improve code quality, and empower creative processes.",
      "Each AI tool I use acts as a customized partner serving a specific purpose. I have integrated different AI solutions into my workflow for code development, component design, visual generation, project planning, game prototyping, patent analysis, and more.",
      "In the cards below, you can see how I use each tool, the areas where I gain efficiency, and the custom prompt structures I have developed."
    ],
    "infoSectionTitle2": "Beyond Code: A New Generation Engineering Thought System with AI",
    "infoSectionDesc2": [
      "I position artificial intelligence not just as a tool, but as a thought partner that expands my engineering perspective. I integrate each AI solution I use with a strategy specific to its task domain, transforming it from a mere output-generating system into a \"collective mind\" with which I can think and build structures.",
      "üß† Not Just Coding, But Building Systems",
      "My work with Cursor AI is a good example. I'm not just creating components ‚Äî I'm building component architecture, setting up principles like reusability, performance, and testability with GPT assistance. For instance, when developing a large Form library, I ask Cursor AI to scan UI behavior patterns, then revise code suggestions according to my principles. This way, AI becomes not just a \"coder\" but a \"thinking\" assistant.",
      "üß¨ A GPT that Generates Patent Ideas? Yes.",
      "I've transformed ChatGPT from a simple chatbot into purpose-specific GPTs. Import Editor: Monitors import groupings according to our team's established order. Data-Test-ID Validator: Analyzes missing or incorrect test IDs for UI testing processes. Patent Investigator: We've created a special GPT that scans national and international similarities of patent ideas I present in intellectual property processes. This greatly facilitates my work when converting ideas into technical documents.",
      "ü™Ñ Claude: Planner and Strategist",
      "Breaking down a task into subtasks might seem easy, but making it scalable is a different skill. With Claude, especially when developing component libraries, I work on planning edge cases, creating refactor strategies, and developing variant scenarios for UI states. This allows me to create a mental architecture before even starting to write code.",
      "‚ö° Grok: Finding Clarity in Uncertainty",
      "There are moments when you have to choose: performance or readability? This is where Grok comes in. For example, when deciding whether to switch from a complex useEffect chain to a custom hook, I explained both versions to Grok ‚Äî it not only offered alternatives but also analyzed the trade-offs and made recommendations.",
      "üé® Muse: Where Visual Thinking Meets Code",
      "In story-focused mini-games I develop with Unity, I use Muse not as an artist but as a \"design partner.\" I generate elements like low-poly objects, isometric scene layouts, and environmental details that guide player attention, then arrange them within the scene. This process affects not just visual design but also in-scene interaction.",
      "üß™ Artistic Prototyping with Fooocus Colab",
      "I can quickly test scene drawings, sprite generation, and shading variants for my 2D game ideas with Fooocus. In art style experiments, I believe the game world and graphic language should be consistent, and I get intensive AI support to speed up this process.",
      "ü§ñ Copilot: Silent Follower, Powerful Completer",
      "Finding simple errors and auto-completing code are Copilot's known capabilities. But I use it more as an \"assistant\" that stays true to detailed work plans. In file structures with multiple modules, while developing tasks I previously planned with Claude, Copilot makes time-saving micro-interventions.",
      "üöÄ Engineering with AI Means Not Just Using, But Designing",
      "For me, artificial intelligence is not just a tool ‚Äî it's an engineering principle. The right tool + the right use case = a transformative effect on the way I think. With every AI tool, I not only save time; I also redesign my way of thinking."
    ],
    "cards": [
      {
        "logo": "üíª",
        "title": "Cursor AI",
        "description": "TypeScript-based UI libraries design and code review assistant",
        "details": [
          "Design TypeScript-based UI libraries",
          "Fix logic bugs",
          "Enforce architectural conventions",
          "Validate SOLID principles"
        ],
        "color": "#fb923c"
      },
      {
        "logo": "ü§ñ",
        "title": "ChatGPT",
        "description": "Custom GPT for patent validation and technical writing",
        "details": [
          "Validate patent ideas",
          "Format claims",
          "Guide technical writing",
          "Code review assistance"
        ],
        "color": "#60a5fa"
      },
      {
        "logo": "üß†",
        "title": "Claude",
        "description": "Project planning and task breakdown assistant",
        "details": [
          "Project planning",
          "Task breakdown",
          "Edge case documentation",
          "Component library development"
        ],
        "color": "#a78bfa"
      },
      {
        "logo": "‚ö°",
        "title": "Grok",
        "description": "Rapid logic validation and implementation comparison",
        "details": [
          "Logic validation",
          "Alternative implementations",
          "Performance optimization",
          "Code readability analysis"
        ],
        "color": "#f87171"
      },
      {
        "logo": "üé®",
        "title": "Muse",
        "description": "Unity game development and pixel art generation",
        "details": [
          "Generate visual assets",
          "Pixel art creation",
          "Game prototyping",
          "Visual consistency"
        ],
        "color": "#4ade80"
      },
      {
        "logo": "üñºÔ∏è",
        "title": "Fooocus Colab",
        "description": "Colab-based tool I use to add images with Stable Diffusion.",
        "details": [
          "Generate high-quality images with Stable Diffusion",
          "Create unique images through prompts",
          "Fast and free usage on Colab",
          "Add custom visuals to projects"
        ],
        "color": "#fbbf24"
      },
      {
        "logo": "üßë‚Äçüíª",
        "title": "Copilot",
        "description": "AI-powered code completion and suggestion assistant",
        "details": [
          "Auto-complete code",
          "Suggest code snippets",
          "Accelerate development",
          "Reduce repetitive tasks"
        ],
        "color": "#06b6d4"
      }
    ]
  },
  "patents": {
    "title": "My Patents",
    "importance": "Why Patents Matter",
    "importanceText": "Patents are crucial for protecting intellectual property and fostering innovation. They represent the intersection of creativity and technical expertise.",
    "list": "Patent Portfolio",
    "number": "Patent No.",
    "view": "View Patent"
  },
  "promptGallery": {
    "title": "AI Prompt Gallery",
    "about": "About My Prompts",
    "aboutText": "These prompts are carefully crafted to achieve specific outcomes in various domains. Feel free to use and adapt them for your needs.",
    "copy": "Copy",
    "copied": "Copied!"
  },
  "language": "Language",
  "noPage": {
    "title": "Page Not Found",
    "description": "The page you are looking for might have been removed, had its name changed, or is temporarily unavailable.",
    "backToHome": "Back to Home"
  },
  "experience": {
    "title": "Experience",
    "subtitle": "Professional work experience and technologies I use",
    "currentlyEmployed": "Currently Employed",
    "close": "Close",
    "clickableCard": "Clickable card",
    "seeDetails": "See Details"
  },
  "aiTools": {
    "title": "Beyond Code: A New Generation Engineering Thought System with AI",
    "subtitle": "I position artificial intelligence not just as a tool, but as a thought partner that expands my engineering perspective. I integrate each AI solution I use with a strategy specific to its task domain, transforming it from a mere output-generating system into a \"collective mind\" with which I can think and build structures.",
    "tools": {
      "cursor": {
        "name": "Cursor AI",
        "description": "TypeScript-based UI libraries design and code review assistant",
        "useCases": [
          "Design TypeScript-based UI libraries",
          "Fix logic bugs",
          "Enforce architectural conventions",
          "Validate SOLID principles"
        ],
        "detailedDescription": "üß† Building Systems, Not Just Writing Code\nMy work with Cursor AI is a good example. I'm not just creating components ‚Äî I'm building component architecture, setting up principles like reusability, performance, and testability with GPT assistance. For instance, when developing a large Form library, I ask Cursor AI to scan UI behavior patterns, then revise code suggestions according to my principles. This way, AI becomes not just a \"coder\" but a \"thinking\" assistant.",
        "modal": {
          "description": "Cursor AI helps you design and review TypeScript-based UI libraries with AI-powered suggestions.",
          "tips": [
            { "title": "SOLID Review", "content": "Use this tool to check if your components follow SOLID principles." },
            { "title": "Bug Fixing", "content": "Paste your buggy code and ask for a step-by-step fix." }
          ],
          "prompts": [
            { "label": "SOLID Check", "content": "Check if this component follows SOLID principles: ..." },
            { "label": "Bug Fix", "content": "Find and fix the bug in this code: ..." }
          ]
        }
      },
      "chatgpt": {
        "name": "ChatGPT",
        "description": "Custom GPT for patent validation and technical writing",
        "useCases": [
          "Validate patent ideas",
          "Format claims",
          "Guide technical writing",
          "Code review assistance"
        ],
        "detailedDescription": "üß¨ A GPT that Generates Patent Ideas? Yes.\nI've transformed ChatGPT from a simple chatbot into purpose-specific GPTs.\n\nImport Editor: Monitors import groupings according to our team's established order.\n\nData-Test-ID Validator: Analyzes missing or incorrect test IDs for UI testing processes.\n\nPatent Investigator: We've created a special GPT that scans national and international similarities of patent ideas I present in intellectual property processes. This greatly facilitates my work when converting ideas into technical documents.",
        "modal": {
          "description": "ChatGPT is used for patent validation, technical writing, and code review assistance.",
          "tips": [
            { "title": "Patent Validation", "content": "Use ChatGPT to validate your patent ideas and format claims." }
          ],
          "prompts": [
            { "label": "Patent Check", "content": "Validate this patent idea: ..." }
          ]
        }
      },
      "claude": {
        "name": "Claude",
        "description": "Project planning and task breakdown assistant",
        "useCases": [
          "Project planning",
          "Task breakdown",
          "Edge case documentation",
          "Component library development"
        ],
        "detailedDescription": "ü™Ñ Claude: Planner and Strategist\nBreaking down a task into subtasks might seem easy, but making it scalable is a different skill. With Claude, especially when developing component libraries, I work on:\n\nPlanning edge cases,\n\nCreating refactor strategies,\n\nDeveloping variant scenarios for UI states.\n\nThis allows me to create a mental architecture before even starting to write code.",
        "modal": {
          "description": "Claude helps with project planning, task breakdown, and documenting edge cases.",
          "tips": [
            { "title": "Task Breakdown", "content": "Use Claude to break down complex projects into manageable tasks." }
          ],
          "prompts": [
            { "label": "Breakdown Prompt", "content": "Break down this project into tasks: ..." }
          ]
        }
      },
      "grok": {
        "name": "Grok",
        "description": "Rapid logic validation and implementation comparison",
        "useCases": [
          "Logic validation",
          "Alternative implementations",
          "Performance optimization",
          "Code readability analysis"
        ],
        "detailedDescription": "‚ö° Grok: Finding Clarity in Uncertainty\nThere are moments when you have to choose: performance or readability?\nThis is where Grok comes in.\nFor example, when deciding whether to switch from a complex useEffect chain to a custom hook, I explained both versions to Grok ‚Äî it not only offered alternatives but also analyzed the trade-offs and made recommendations.",
        "modal": {
          "description": "Grok is used for logic validation and comparing alternative implementations.",
          "tips": [
            { "title": "Logic Validation", "content": "Use Grok to validate your logic and compare different implementations." }
          ],
          "prompts": [
            { "label": "Logic Check", "content": "Validate the logic in this code: ..." }
          ]
        }
      },
      "muse": {
        "name": "Muse",
        "description": "Unity game development and pixel art generation",
        "useCases": [
          "Generate visual assets",
          "Pixel art creation",
          "Game prototyping",
          "Visual consistency"
        ],
        "detailedDescription": "üé® Muse: Where Visual Thinking Meets Code\nIn story-focused mini-games I develop with Unity, I use Muse not as an artist but as a \"design partner.\" I generate elements like:\n\nLow-poly objects,\n\nIsometric scene layouts,\n\nEnvironmental details that guide player attention,\n\nThen arrange them within the scene. This process affects not just visual design but also in-scene interaction.",
        "modal": {
          "description": "Muse is used for generating visual assets and pixel art for Unity games.",
          "tips": [
            { "title": "Pixel Art", "content": "Use Muse to quickly generate pixel art for your prototypes." }
          ],
          "prompts": [
            { "label": "Pixel Art Prompt", "content": "Generate a pixel art character: ..." }
          ]
        }
      },
      "fooocus": {
        "name": "Fooocus Colab",
        "description": "Stable Diffusion-based image generation tool",
        "useCases": [
          "Generate high-quality images with Stable Diffusion",
          "Create unique images through prompts",
          "Fast and free usage on Colab",
          "Add custom visuals to projects"
        ],
        "detailedDescription": "üß™ Artistic Prototyping with Fooocus Colab\nI can quickly test scene drawings, sprite generation, and shading variants for my 2D game ideas with Fooocus. In art style experiments, I believe the game world and graphic language should be consistent, and I get intensive AI support to speed up this process.",
        "modal": {
          "description": "Fooocus Colab is used for generating high-quality and unique images using Stable Diffusion.",
          "tips": [
            { "title": "Prompt Writing", "content": "Use clear and detailed prompts for better results." }
          ],
          "prompts": [
            { "label": "Image Generation Prompt", "content": "Generate a space-themed illustration: ..." }
          ]
        }
      },
      "copilot": {
        "name": "Copilot",
        "description": "AI-powered code completion and suggestion assistant",
        "useCases": [
          "Auto-complete code",
          "Suggest code snippets",
          "Accelerate development",
          "Reduce repetitive tasks"
        ],
        "detailedDescription": "ü§ñ Copilot: Silent Follower, Powerful Completer\nFinding simple errors and auto-completing code are Copilot's known capabilities. But I use it more as an \"assistant\" that stays true to detailed work plans. In file structures with multiple modules, while developing tasks I previously planned with Claude, Copilot makes time-saving micro-interventions.",
        "modal": {
          "description": "Copilot is your AI pair programmer, offering real-time code suggestions and completions as you type.",
          "tips": [
            { "title": "Context Awareness", "content": "Copilot adapts to your code context and suggests relevant completions." },
            { "title": "Prompting", "content": "Write clear function names and comments to get better suggestions." }
          ],
          "prompts": [
            { "label": "Function Implementation", "content": "Implement a function that sorts an array of numbers in ascending order." },
            { "label": "Boilerplate Generation", "content": "Generate a React functional component with TypeScript." }
          ]
        }
      }
    }
  }
} 